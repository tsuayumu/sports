javascript:
	function set_ajax() {
		$('.js-battle-create').on('ajax:success', function(event) { 
			alert("登録しました")
		})

		$('.js-battle-index').on('ajax:success', function(event, data) {
			alert(data["score"])
		})
	}
	$(document).on('turbolinks:load', set_ajax);

	$(function(){
		$('.select-average').change(function(){
			average_sum = 0
			for (  var i = 0;  i < 9;  i++  ) {
	    	average_sum = average_sum + Number($("#dream_lineup_form_dream_lineups_" + i.toString() + "__average").val())
			}
	    $(".remain-average").text(2250 - average_sum);
		});

		$('.select-homerun').change(function(){
			homerun_sum = 0
			for (  var i = 0;  i < 9;  i++  ) {
	    	homerun_sum = homerun_sum + Number($("#dream_lineup_form_dream_lineups_" + i.toString() + "__homerun").val())
			}
	    $(".remain-homerun").text(150 - homerun_sum)
		});

		$('.select-rbi').change(function(){
			rbi_sum = 0
			for (  var i = 0;  i < 9;  i++  ) {
	    	rbi_sum = rbi_sum + Number($("#dream_lineup_form_dream_lineups_" + i.toString() + "__rbi").val())
			}
	    $(".remain-rbi").text(350 - rbi_sum)
		});

		$('.select-steal').change(function(){
			steal_sum = 0
			for (  var i = 0;  i < 9;  i++  ) {
	    	steal_sum = steal_sum + Number($("#dream_lineup_form_dream_lineups_" + i.toString() + "__steal").val())
			}
	    $(".remain-steal").text(80 - steal_sum)
		});
	});

div[id="Giants"]
	div.uk-container.uk-container-center
		h1.page-tit.white
			| 理想のスタメン
		div.form-content
			= form_for @lineup_form, url: :create_dream_lineup do |f|
				h2.white
					| 打順入力
				table[border="0"  width="100%" style="color: white"]
						tr[style="text-align: center"]
							td
								| 
							td
								| 打率
							td
								| 本塁打
							td
								|　打点
							td
								|　盗塁
						tr[style="text-align: center"]
							td
								| 残り
							td.remain-average
								| 2250
							td.remain-homerun
								| 150
							td.remain-rbi
								| 350
							td.remain-steal
								| 80
						- 9.times do |n|	
							= f.fields_for "dream_lineups[#{n}]" do |m|
								tr[style="text-align: center"]
									td
										| #{n+1}番
									td
										| 0.
										= m.select :average, select_average, { selected: 0}, { class: "select-average" }
									td
										= m.select :homerun, select_homerun, { selected: 0}, { class: "select-homerun" }
									td
										= m.select :rbi, select_rbi, { selected: 0 }, { class: "select-rbi" }
									td
										= m.select :steal, select_steal, { selected: 0 }, { class: "select-steal" }
									/ td
									/ 	= m.number_field :rbi, maxlength: 2
								= m.hidden_field :order, value: n+1
				// | user: #{f.text_field :user_id}
				= f.submit '登録'
				p[style="color: white"]
						| ＊打率は合計で2250以内、本塁打は合計で150本以内、打点は合計で350点以内、盗塁は合計で80以内で入力してください

		h2.white
			| 投稿一覧#{@dream_lineups.count}件

		div.hidden-ss.uk-grid[data-uk-grid-margin]
			- @dream_lineups.each do |dream_lineup|
				div.bbs-contet.uk-width-1-3[id="#{dream_lineup.id * 10}"]
					section.member[style="text-align: center;"]
						div.back-brack
							table[border="0"  width="80%" style="color: white"]
								tr[style="text-align: center"]
									td
										|
									td
										| 打率
									td
										| 本塁打
									td
										| 打点
									td
										| 盗塁
									- dream_lineup.dream_lineup.each_with_index do |order, index|
										- player = DreamPlayer.find(order.dream_player_id)
										tr[style="text-align: right"]
											td
												| #{index + 1} 番
											td
												| .
												= (player.average * 1000).to_i
											td
												= player.homerun 
											td
												= player.rbi
											td
												= player.steal
						= form_tag(create_dream_battle_path(dream_lineup_id: dream_lineup.id), remote: true, format: 'json',class: "js-battle-create") do
							= submit_tag "このチームで戦う", dream_lineup_id: dream_lineup.id
						= form_tag(index_dream_battle_path(dream_lineup_id: dream_lineup.id), remote: true, format: 'json', class: "js-battle-index") do
							= submit_tag "このチームと戦う", dream_lineup_id: dream_lineup.id

					/ section.uk-width-3-5.coment
					/ 	h3
					/ 		| コメント
					/ 	= form_for @comment_form, url: :create_opening_starting_lineup_comment do |f|
					/ 		| 感想: #{f.text_field :comment, required: true}
					/ 		= f.hidden_field :opening_starting_lineup_id, value: opening_lineup.id
					/ 		- if current_user.present?
					/ 			= f.hidden_field :user_id, value: current_user.id
					/ 		= f.submit '投稿'
					/ 	div.text-coment
					/ 		- comments = opening_starting_lineup_comments(opening_lineup.id)
					/ 		- if comments.present?
					/ 			- comments.each do |comment|
					/ 				p
					/ 					|　#{comment.comment}   #{comment.updated_at}

		div.visible-ss
			- @dream_lineups.each do |dream_lineup|
				div#test.bbs-content.uk-container.uk-container-center
					section.member[style="text-align: center;"]
						table[border="0"  width="100%" style="color: white"]
							tr[style="text-align: center"]
								td
									| 打率
								td
									| 本塁打
								td
									| 打点
								td
									| 盗塁
							- dream_lineup.dream_lineup.each_with_index do |order, index|
								- player = DreamPlayer.find(order.dream_player_id)
								tr[style="text-align: center"]
									td
										| .
										= (player.average * 1000).to_i
									td
										= player.homerun 
									td
										= player.rbi
									td
										= player.steal

						= form_tag(create_dream_battle_path(dream_lineup_id: dream_lineup.id), remote: true, format: 'json',class: "js-battle-create") do
							= submit_tag "このチームで戦う", dream_lineup_id: dream_lineup.id
						= form_tag(index_dream_battle_path(dream_lineup_id: dream_lineup.id), remote: true, format: 'json', class: "js-battle-index") do
							= submit_tag "このチームと戦う", dream_lineup_id: dream_lineup.id
									
/ 					section.coment
/ 						h3[style="padding:10px 0 0 0;"]
/ 							| コメント
/ 						= form_for @comment_form, url: :create_opening_starting_lineup_comment do |f|
/ 							| 感想: #{f.text_field :comment, required: true}
/ 							= f.hidden_field :opening_starting_lineup_id, value: opening_lineup.id
/ 							- if current_user.present?
/ 								= f.hidden_field :user_id, value: current_user.id
/ 							= f.submit '投稿'
/ 						div.text-coment
/ 							- comments = opening_starting_lineup_comments(opening_lineup.id)
/ 							- if comments.present?
/ 								- comments.each do |comment|
/ 									p
/ 										|　#{comment.comment}   #{comment.updated_at}
